{"ast":null,"code":"export default function validateForm(values, props) {\n  console.log(\"Validacion\");\n  console.log(props);\n  const err = {};\n  let confirm = \"\";\n  let other = \"\";\n  props.info.forEach(element => {\n    if (element.required === true) {\n      if (values[element.id].length < element.length) {\n        err[element.id] = `Length of ${element.id} is too short`;\n      }\n\n      if (element.type === \"number\" && values[element.id] < element.min) {\n        err[element.id] = `${element.id} is too small`;\n      }\n\n      if (element.id.toString().includes(\"confirm\")) {\n        confirm = element.id;\n        other = element.id.toString().split(\"confirm\")[1].toLowerCase();\n        console.log(confirm);\n      }\n    }\n  });\n\n  if (confirm.length !== 0) {\n    if (values[confirm] !== values[other]) {\n      err[other] = `${other}s must match`;\n    }\n  } //todos los campos del formulario\n\n\n  return err;\n}","map":{"version":3,"sources":["/Users/danielbetancurth/Desktop/Uniandes/2020-20/Web/formulario/src/utils/validateForm.js"],"names":["validateForm","values","props","console","log","err","confirm","other","info","forEach","element","required","id","length","type","min","toString","includes","split","toLowerCase"],"mappings":"AAAA,eAAe,SAASA,YAAT,CAAsBC,MAAtB,EAA8BC,KAA9B,EAAqC;AAClDC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,QAAMG,GAAG,GAAG,EAAZ;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAL,EAAAA,KAAK,CAACM,IAAN,CAAWC,OAAX,CAAoBC,OAAD,IAAa;AAC9B,QAAIA,OAAO,CAACC,QAAR,KAAqB,IAAzB,EAA+B;AAC7B,UAAIV,MAAM,CAACS,OAAO,CAACE,EAAT,CAAN,CAAmBC,MAAnB,GAA4BH,OAAO,CAACG,MAAxC,EAAgD;AAC9CR,QAAAA,GAAG,CAACK,OAAO,CAACE,EAAT,CAAH,GAAmB,aAAYF,OAAO,CAACE,EAAG,eAA1C;AACD;;AACD,UAAIF,OAAO,CAACI,IAAR,KAAiB,QAAjB,IAA6Bb,MAAM,CAACS,OAAO,CAACE,EAAT,CAAN,GAAqBF,OAAO,CAACK,GAA9D,EAAmE;AACjEV,QAAAA,GAAG,CAACK,OAAO,CAACE,EAAT,CAAH,GAAmB,GAAEF,OAAO,CAACE,EAAG,eAAhC;AACD;;AACD,UAAIF,OAAO,CAACE,EAAR,CAAWI,QAAX,GAAsBC,QAAtB,CAA+B,SAA/B,CAAJ,EAA+C;AAC7CX,QAAAA,OAAO,GAAGI,OAAO,CAACE,EAAlB;AACAL,QAAAA,KAAK,GAAGG,OAAO,CAACE,EAAR,CAAWI,QAAX,GAAsBE,KAAtB,CAA4B,SAA5B,EAAuC,CAAvC,EAA0CC,WAA1C,EAAR;AACAhB,QAAAA,OAAO,CAACC,GAAR,CAAYE,OAAZ;AACD;AACF;AACF,GAdD;;AAeA,MAAIA,OAAO,CAACO,MAAR,KAAmB,CAAvB,EAA0B;AACxB,QAAIZ,MAAM,CAACK,OAAD,CAAN,KAAoBL,MAAM,CAACM,KAAD,CAA9B,EAAuC;AACrCF,MAAAA,GAAG,CAACE,KAAD,CAAH,GAAc,GAAEA,KAAM,cAAtB;AACD;AACF,GAzBiD,CA0BlD;;;AACA,SAAOF,GAAP;AACD","sourcesContent":["export default function validateForm(values, props) {\n  console.log(\"Validacion\");\n  console.log(props);\n  const err = {};\n  let confirm = \"\";\n  let other = \"\";\n  props.info.forEach((element) => {\n    if (element.required === true) {\n      if (values[element.id].length < element.length) {\n        err[element.id] = `Length of ${element.id} is too short`;\n      }\n      if (element.type === \"number\" && values[element.id] < element.min) {\n        err[element.id] = `${element.id} is too small`;\n      }\n      if (element.id.toString().includes(\"confirm\")) {\n        confirm = element.id;\n        other = element.id.toString().split(\"confirm\")[1].toLowerCase();\n        console.log(confirm);\n      }\n    }\n  });\n  if (confirm.length !== 0) {\n    if (values[confirm] !== values[other]) {\n      err[other] = `${other}s must match`;\n    }\n  }\n  //todos los campos del formulario\n  return err;\n}\n"]},"metadata":{},"sourceType":"module"}