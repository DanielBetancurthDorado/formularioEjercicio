{"ast":null,"code":"import { useState } from \"react\"; //props en esta clase\n\nconst useForm = (props, validateForm) => {\n  let acumulado = new Object();\n  props.info.forEach(element => {\n    acumulado[element.name] = \"\";\n  });\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState(acumulado);\n\n  const handleChange = evt => {\n    console.log(values);\n    setValues({ ...values,\n      [evt.target.name]: evt.target.value\n    });\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    setErrors(validateForm(values, props));\n  };\n\n  return {\n    handleChange,\n    handleSubmit,\n    errors\n  };\n};\n\nexport default useForm;","map":{"version":3,"sources":["/Users/danielbetancurth/Desktop/Uniandes/2020-20/Web/formulario/src/customHooks/useForm.js"],"names":["useState","useForm","props","validateForm","acumulado","Object","info","forEach","element","name","errors","setErrors","values","setValues","handleChange","evt","console","log","target","value","handleSubmit","preventDefault"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CACA;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,YAAR,KAAyB;AACrC,MAAIC,SAAS,GAAG,IAAIC,MAAJ,EAAhB;AACAH,EAAAA,KAAK,CAACI,IAAN,CAAWC,OAAX,CAAmBC,OAAO,IAAI;AAC1BJ,IAAAA,SAAS,CAACI,OAAO,CAACC,IAAT,CAAT,GAA0B,EAA1B;AACH,GAFD;AAGF,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAACI,SAAD,CAApC;;AAEA,QAAMU,YAAY,GAAIC,GAAD,IAAS;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACFC,IAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,OAACG,GAAG,CAACG,MAAJ,CAAWT,IAAZ,GAAmBM,GAAG,CAACG,MAAJ,CAAWC;AAFtB,KAAD,CAAT;AAID,GAND;;AAOA,QAAMC,YAAY,GAAIL,GAAD,IAAS;AAC5BA,IAAAA,GAAG,CAACM,cAAJ;AACAV,IAAAA,SAAS,CAACR,YAAY,CAACS,MAAD,EAASV,KAAT,CAAb,CAAT;AACD,GAHD;;AAIA,SAAO;AAAEY,IAAAA,YAAF;AAAgBM,IAAAA,YAAhB;AAA6BV,IAAAA;AAA7B,GAAP;AACD,CApBD;;AAqBA,eAAeT,OAAf","sourcesContent":["import { useState } from \"react\";\n//props en esta clase\nconst useForm = (props, validateForm) => {\n    let acumulado = new Object();\n    props.info.forEach(element => {\n        acumulado[element.name] = \"\";\n    });\n  const [errors, setErrors] = useState({});\n  const [values, setValues] = useState(acumulado);\n\n  const handleChange = (evt) => {\n      console.log(values)\n    setValues({\n      ...values,\n      [evt.target.name]: evt.target.value,\n    });\n  };\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n    setErrors(validateForm(values, props))\n  };\n  return { handleChange, handleSubmit,errors };\n};\nexport default useForm;\n"]},"metadata":{},"sourceType":"module"}