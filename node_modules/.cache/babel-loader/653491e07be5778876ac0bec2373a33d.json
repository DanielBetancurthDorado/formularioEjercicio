{"ast":null,"code":"var _jsxFileName = \"/Users/danielbetancurth/Desktop/Uniandes/2020-20/Web/formulario/src/components/signForm.js\";\nimport React from \"react\";\nimport useForm from \"../customHooks/useForm\";\nimport validateForm from \"../utils/validateForm\";\nimport { Form, Button, FormControl } from \"react-bootstrap\";\n\nconst SignForm = props => {\n  const {\n    handleChange,\n    handleSubmit,\n    errors\n  } = useForm(props, validateForm);\n  console.log(errors);\n  console.log(props);\n  let req = \"\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }\n  }, \"Register form\"), /*#__PURE__*/React.createElement(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, props.info.map(element => {\n    if (element.required === undefined) {\n      req = \"(No required)\";\n    } else {\n      req = \"(Required)\";\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      htmlFor: element.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, element.placeholder, \":\"), /*#__PURE__*/React.createElement(FormControl, {\n      type: element.type,\n      name: element.name,\n      placeholder: element.placeholder + \" \" + req,\n      onChange: handleChange,\n      id: element.id,\n      required: element.required,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }\n    }), errors[element.id] && /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 38\n      }\n    }, errors[element.id]));\n  }), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Send\")));\n};\n\nexport default SignForm;\n/*\n<div>\n            <h1>Register form</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"username\">Username:</label>\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} id=\"username\"/>\n                    {errors.username && <p>{errors.username}</p>}\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email:</label>\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\"  onChange={handleChange} id=\"email\" />\n                </div>\n                <div>\n                    <label htmlFor=\"password\" >Password:</label>\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} id=\"password\"/>\n                </div>\n                <div>\n                    <label htmlFor=\"confirmPassword\">Confirm password:</label>\n                    <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={handleChange} id=\"confirmPassword\"/>\n                </div>\n                <button>Send</button>\n            </form>\n        </div>\n        */","map":{"version":3,"sources":["/Users/danielbetancurth/Desktop/Uniandes/2020-20/Web/formulario/src/components/signForm.js"],"names":["React","useForm","validateForm","Form","Button","FormControl","SignForm","props","handleChange","handleSubmit","errors","console","log","req","info","map","element","required","undefined","id","placeholder","type","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,IAAT,EAAcC,MAAd,EAAsBC,WAAtB,QAAwC,iBAAxC;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,YAAhB;AAA8BC,IAAAA;AAA9B,MAAyCT,OAAO,CAACM,KAAD,EAAOL,YAAP,CAAtD;AACAS,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,KAAZ;AACA,MAAIM,GAAG,GAAG,EAAV;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAgBC,OAAD,IAAa;AAC3B,QAAGA,OAAO,CAACC,QAAR,KAAmBC,SAAtB,EAAgC;AAC9BL,MAAAA,GAAG,GAAG,eAAN;AACD,KAFD,MAGI;AAACA,MAAAA,GAAG,GAAG,YAAN;AAAmB;;AACxB,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,OAAO,EAAEG,OAAO,CAACG,EAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAkCH,OAAO,CAACI,WAA1C,MADF,eAEE,oBAAC,WAAD;AACE,MAAA,IAAI,EAAEJ,OAAO,CAACK,IADhB;AAEE,MAAA,IAAI,EAAEL,OAAO,CAACM,IAFhB;AAGE,MAAA,WAAW,EAAEN,OAAO,CAACI,WAAR,GAAsB,GAAtB,GAA2BP,GAH1C;AAIE,MAAA,QAAQ,EAAEL,YAJZ;AAKE,MAAA,EAAE,EAAEQ,OAAO,CAACG,EALd;AAME,MAAA,QAAQ,EAAEH,OAAO,CAACC,QANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAUGP,MAAM,CAACM,OAAO,CAACG,EAAT,CAAN,iBAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKT,MAAM,CAACM,OAAO,CAACG,EAAT,CAAX,CAVzB,CADF;AAcD,GAnBA,CADH,eAqBE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEV,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YArBF,CAFF,CADF;AA4BD,CAjCD;;AAkCA,eAAeH,QAAf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from \"react\";\nimport useForm from \"../customHooks/useForm\";\nimport validateForm from \"../utils/validateForm\";\nimport { Form,Button ,FormControl} from \"react-bootstrap\";\n\n\nconst SignForm = (props) => {\n  const { handleChange, handleSubmit, errors } = useForm(props,validateForm);\n  console.log(errors);\n  console.log(props);\n  let req = \"\";\n  return (\n    <div>\n      <h1>Register form</h1>\n      <Form>\n        {props.info.map((element) => {\n          if(element.required===undefined){\n            req = \"(No required)\";\n          }\n          else{req = \"(Required)\"}\n          return (\n            <div>\n              <Form.Label htmlFor={element.id}>{element.placeholder}:</Form.Label>\n              <FormControl\n                type={element.type}\n                name={element.name}\n                placeholder={element.placeholder + \" \"+ req}\n                onChange={handleChange}\n                id={element.id}\n                required={element.required} \n              />\n              {errors[element.id] && <p >{errors[element.id]}</p>}\n            </div>\n          );\n        })}\n        <Button onClick={handleSubmit}>Send</Button>\n      </Form>\n    </div>\n  );\n};\nexport default SignForm;\n/*\n<div>\n            <h1>Register form</h1>\n            <form onSubmit={handleSubmit}>\n                <div>\n                    <label htmlFor=\"username\">Username:</label>\n                    <input type=\"text\" name=\"username\" placeholder=\"Username\" onChange={handleChange} id=\"username\"/>\n                    {errors.username && <p>{errors.username}</p>}\n                </div>\n                <div>\n                    <label htmlFor=\"email\">Email:</label>\n                    <input type=\"email\" name=\"email\" placeholder=\"Email\"  onChange={handleChange} id=\"email\" />\n                </div>\n                <div>\n                    <label htmlFor=\"password\" >Password:</label>\n                    <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={handleChange} id=\"password\"/>\n                </div>\n                <div>\n                    <label htmlFor=\"confirmPassword\">Confirm password:</label>\n                    <input type=\"password\" name=\"confirmPassword\" placeholder=\"Confirm password\" onChange={handleChange} id=\"confirmPassword\"/>\n                </div>\n                <button>Send</button>\n            </form>\n        </div>\n        */\n"]},"metadata":{},"sourceType":"module"}